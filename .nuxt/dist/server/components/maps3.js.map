{"version":3,"file":"components/maps3.js","sources":["webpack:///./components/Maps3.vue?cd69","webpack:///./components/Maps3.vue?d6da","webpack:///./components/Maps3.vue?d299","webpack:///./components/Maps3.vue?8434","webpack:///./components/Maps3.vue","webpack:///./components/Maps3.vue?98c6","webpack:///./components/Maps3.vue?fb92"],"sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Maps3.vue?vue&type=style&index=0&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesServer.js\").default\nmodule.exports.__inject__ = function (context) {\n  add(\"9dd3e8ac\", content, true, context)\n};","export * from \"-!../node_modules/vue-style-loader/index.js??ref--3-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Maps3.vue?vue&type=style&index=0&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".gm-style .gm-style-iw-t:after{background:transparent;display:none}.gm-style .gm-style-iw-c{overflow:visible}.container1{background-color:rgba(0,0,0,.2);padding:10px}.container1:after{background:linear-gradient(45deg,rgba(0,0,0,.3) 50%,hsla(0,0%,100%,0) 51%,hsla(0,0%,100%,0)) rgba(0,0,0,.3);box-shadow:-2px 2px 2px 0 hsla(0,0%,69.8%,.4);content:\\\"\\\";height:15px;right:-15px;position:absolute;top:70px;transform:translate(-50%,-50%) rotate(-135deg);width:15px;overflow:visible}.container2{background-color:rgba(0,0,0,.2);padding:10px}.container2:after{background:linear-gradient(45deg,rgba(0,0,0,.3) 50%,hsla(0,0%,100%,0) 51%,hsla(0,0%,100%,0)) rgba(0,0,0,.3);box-shadow:-2px 2px 2px 0 hsla(0,0%,69.8%,.4);content:\\\"\\\";height:15px;right:-15px;position:absolute;top:70px;transform:translate(-50%,-50%) rotate(-135deg);width:15px;overflow:visible}.container3{background-color:rgba(0,0,0,.2);padding:10px}.container3:after{background:linear-gradient(45deg,rgba(0,0,0,.3) 50%,hsla(0,0%,100%,0) 51%,hsla(0,0%,100%,0)) rgba(0,0,0,.3);box-shadow:-2px 2px 2px 0 hsla(0,0%,69.8%,.4);content:\\\"\\\";height:15px;left:0;position:absolute;top:70px;transform:translate(-50%,-50%) rotate(45deg);width:15px;overflow:visible}.container4{background-color:rgba(0,0,0,.2);padding:10px}.container4:after{background:linear-gradient(45deg,rgba(0,0,0,.3) 50%,hsla(0,0%,100%,0) 51%,hsla(0,0%,100%,0)) rgba(0,0,0,.3);box-shadow:-2px 2px 2px 0 hsla(0,0%,69.8%,.4);content:\\\"\\\";height:15px;left:0;position:absolute;top:110px;transform:translate(-50%,-50%) rotate(45deg);width:15px;overflow:visible}.container5{background-color:rgba(0,0,0,.2);padding:10px}.container5:after{background:linear-gradient(45deg,rgba(0,0,0,.3) 50%,hsla(0,0%,100%,0) 51%,hsla(0,0%,100%,0)) rgba(0,0,0,.3);box-shadow:-2px 2px 2px 0 hsla(0,0%,69.8%,.4);content:\\\"\\\";height:15px;right:-15px;position:absolute;top:95px;transform:translate(-50%,-50%) rotate(-140deg);width:15px;overflow:visible}.ui{font-weight:bolder;width:150px;padding-bottom:5px}.ui2,.ui4{font-weight:700;width:150px;padding-bottom:5px}.data{padding:5px 0 5px 10px;font-weight:700;font-size:1em}#map{height:100vh;background:grey}.gm-style-iw+div{display:none!important}button.gm-ui-hover-effect{visibility:hidden}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"calc(100vh - 120px)\"},attrs:{\"id\":\"googleMap\"}},[])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//\n//\n//\n//\n\r\nimport mqtt from \"mqtt\";\r\nimport { mapMutations } from \"vuex\";\r\n\r\nclass isHigh {\r\n  constructor(indexStation, indexSensor, isHigh) {\r\n    this.indexStation = indexStation;\r\n    this.indexSensor = indexSensor;\r\n    this.isHigh = isHigh;\r\n  }\r\n}\r\n\r\nconst maxO2 = 21;\r\nconst maxLEL = 1.5;\r\nconst maxVOC = 10;\r\nconst maxNH3 = 10;\r\nconst maxCL2 = 10;\r\nconst maxH2S = 10;\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      map: null,\r\n      connection: {\r\n        host: \"txio.live\",\r\n        port: 8083,\r\n        endpoint: \"/mqtt\",\r\n        clean: true, // Reserved session\r\n        connectTimeout: 4000, // Time out\r\n        reconnectPeriod: 4000, // Reconnection interval\r\n      },\r\n      subscription: {\r\n        // topic: \"geyzer/#\",\r\n        topic: \"geyzer/data/#\",\r\n        qos: 0,\r\n      },\r\n      receiveNews: \"\",\r\n      qosList: [\r\n        { label: 0, value: 0 },\r\n        { label: 1, value: 1 },\r\n        { label: 2, value: 2 },\r\n      ],\r\n      client: {\r\n        connected: false,\r\n      },\r\n      subscribeSuccess: false,\r\n      lel1: \"Waiting...\",\r\n      lel2: \"Waiting...\",\r\n      lel3: \"Waiting...\",\r\n      lel4: \"Waiting...\",\r\n      lel5: \"Waiting...\",\r\n\r\n      lel12: 0,\r\n      lel22: 0,\r\n      lel32: 0,\r\n      lel42: 0,\r\n      lel52: 0,\r\n      lelArray: [],\r\n    };\r\n  },\r\n  methods: {\r\n    check(indexStation, indexSensor, value, maxValue) {\r\n      if (value > maxValue) {\r\n        const payload = new isHigh(indexStation, indexSensor, true);\r\n        this.checkWarning(payload);\r\n      } else {\r\n        const payload = new isHigh(indexStation, indexSensor, false);\r\n        this.checkWarning(payload);\r\n      }\r\n    },\r\n    checkLNG() {\r\n      this.lelArray = [];\r\n      // console.log(\"hh\");\r\n      // this.lelArray.push(\"LEL 1 is high\");\r\n      if (this.lel1 >= maxLEL) {\r\n        this.lelArray.push(\" LEL 1\");\r\n        // console.log(\"here\");\r\n      }\r\n      if (this.lel2 >= maxLEL) {\r\n        this.lelArray.push(\" LEL 2\");\r\n        // console.log(\"here\");\r\n      }\r\n      if (this.lel3 >= maxLEL) {\r\n        this.lelArray.push(\" LEL 3\");\r\n        // console.log(\"here\");\r\n      }\r\n      if (this.lel4 >= maxLEL) {\r\n        this.lelArray.push(\" LEL 4\");\r\n        // console.log(\"here\");\r\n      }\r\n      if (this.lel5 >= maxLEL) {\r\n        this.lelArray.push(\" LEL 5\");\r\n        // console.log(\"here\");\r\n      }\r\n      let a = this.lelArray.toString();\r\n      if (this.lelArray.length > 1) {\r\n        a = a + \" readings are high\";\r\n      } else if (this.lelArray.length == 1) {\r\n        a = a + \" reading is high\";\r\n      } else {\r\n        a = \"Good\";\r\n      }\r\n      this.checkLNGWarning(a);\r\n\r\n      // console.log(this.lelArray);\r\n    },\r\n    // Create connection\r\n    createConnection() {\r\n      var mapProp = {\r\n        center: new google.maps.LatLng(3.2640663039813322, 113.07239476715013),\r\n        // 3.2641278377888616, 113.06835348511056\r\n        // 3.2662281400041455, 113.06871934904022\r\n        // 3.264608454097705, 113.08591473154868\r\n        // 3.261238482298228, 113.07080689933095\r\n        // 3.2640663039813322, 113.07239476715013\r\n        zoom: 16,\r\n        styles: [\r\n          {\r\n            elementType: \"geometry\",\r\n            stylers: [\r\n              {\r\n                color: \"#242f3e\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [\r\n              {\r\n                color: \"#746855\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            elementType: \"labels.text.stroke\",\r\n            stylers: [\r\n              {\r\n                color: \"#242f3e\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"administrative.locality\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [\r\n              {\r\n                color: \"#d59563\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"poi\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [\r\n              {\r\n                color: \"#d59563\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"poi.park\",\r\n            elementType: \"geometry\",\r\n            stylers: [\r\n              {\r\n                color: \"#263c3f\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"poi.park\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [\r\n              {\r\n                color: \"#6b9a76\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"road\",\r\n            elementType: \"geometry\",\r\n            stylers: [\r\n              {\r\n                color: \"#38414e\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"road\",\r\n            elementType: \"geometry.stroke\",\r\n            stylers: [\r\n              {\r\n                color: \"#212a37\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"road\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [\r\n              {\r\n                color: \"#9ca5b3\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"geometry\",\r\n            stylers: [\r\n              {\r\n                color: \"#746855\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"geometry.stroke\",\r\n            stylers: [\r\n              {\r\n                color: \"#1f2835\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"road.highway\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [\r\n              {\r\n                color: \"#f3d19c\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"transit\",\r\n            elementType: \"geometry\",\r\n            stylers: [\r\n              {\r\n                color: \"#2f3948\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"transit.station\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [\r\n              {\r\n                color: \"#d59563\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"water\",\r\n            elementType: \"geometry\",\r\n            stylers: [\r\n              {\r\n                color: \"#17263c\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"water\",\r\n            elementType: \"labels.text.fill\",\r\n            stylers: [\r\n              {\r\n                color: \"#515c6d\",\r\n              },\r\n            ],\r\n          },\r\n          {\r\n            featureType: \"water\",\r\n            elementType: \"labels.text.stroke\",\r\n            stylers: [\r\n              {\r\n                color: \"#17263c\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n        mapTypeId: \"hybrid\",\r\n      };\r\n      var map = new google.maps.Map(\r\n        document.getElementById(\"googleMap\"),\r\n        mapProp\r\n      );\r\n      // Petrochemical Jetty\r\n      var marker = new google.maps.Marker({\r\n        position: new google.maps.LatLng(3.2592932651185236, 113.0752931476544),\r\n        map: map,\r\n        animation: google.maps.Animation.Drop,\r\n      });\r\n      var infowindow = new google.maps.InfoWindow({\r\n        content: `<div class=\"container1\"><div class=\"ui header\">Petrochemical Jetty</div><div class=\"data\">O2 : Waiting...</div><div class=\"data\">LEL : Waiting...</div><div class=\"data end\">VOC : Waiting...</div></div>`,\r\n        pixelOffset: new google.maps.Size(-120, 100),\r\n      });\r\n      infowindow.open(map, marker);\r\n\r\n      // Ammonia Whaft Jetty\r\n      var marker2 = new google.maps.Marker({\r\n        position: new google.maps.LatLng(\r\n          3.2614980671619365,\r\n          113.06751818919237\r\n        ),\r\n        map: map,\r\n        animation: google.maps.Animation.Drop,\r\n      });\r\n      var infowindow2 = new google.maps.InfoWindow({\r\n        content: `<div class=\"container2\"><div class=\"ui header\">Ammonia Whaft Jetty</div><div class=\"data\">O2 : Waiting...</div><div class=\"data\">LEL : Waiting...</div><div class=\"data end\">NH3 : Waiting...</div></div>`,\r\n        pixelOffset: new google.maps.Size(-115, 100),\r\n      });\r\n      infowindow2.open(map, marker2);\r\n\r\n      // OBB Jetty\r\n      var marker3 = new google.maps.Marker({\r\n        position: new google.maps.LatLng(3.258601715715236, 113.07704509915513),\r\n        map: map,\r\n        animation: google.maps.Animation.Drop,\r\n      });\r\n      var infowindow3 = new google.maps.InfoWindow({\r\n        content: `<div class=\"container3\"><div class=\"ui2 header\">OBB Jetty</div><div class=\"data\">O2 : Waiting...</div><div class=\"data\">LEL : Waiting...</div><div class=\"data end\">VOC : Waiting...</div></div>`,\r\n        pixelOffset: new google.maps.Size(115, 80),\r\n      });\r\n      infowindow3.open(map, marker3);\r\n\r\n      // DG Yard\r\n      var marker4 = new google.maps.Marker({\r\n        position: new google.maps.LatLng(\r\n          3.2647273706828495,\r\n          113.07265982264411\r\n        ),\r\n        map: map,\r\n        animation: google.maps.Animation.Drop,\r\n      });\r\n      var infowindow4 = new google.maps.InfoWindow({\r\n        content: `<div class=\"container4\"><div class=\"ui4 header\">DG yard</div><div class=\"data\">O2 :Waiting...</div><div class=\"data\">LEL : Waiting...</div><div class=\"data\">VOC : Waiting...</div><div class=\"data\">NH3 : Waiting...</div><div class=\"data\">CL2 : Waiting...</div><div class=\"data end\">H2S : Waiting...</div></div>`,\r\n        pixelOffset: new google.maps.Size(120, 120),\r\n      });\r\n      infowindow4.open(map, marker4);\r\n\r\n      // LNG ISO Tank Yard\r\n      var marker5 = new google.maps.Marker({\r\n        position: new google.maps.LatLng(\r\n          3.2660908704052347,\r\n          113.07120972436627\r\n        ),\r\n        map: map,\r\n        animation: google.maps.Animation.Drop,\r\n      });\r\n      var infowindow5 = new google.maps.InfoWindow({\r\n        content: `<div class=\"container5\"><div class=\"ui header\">LNG ISO Tank Yard</div><div class=\"data\">LEL 1 : Waiting...</div><div class=\"data\">LEL 2 : Waiting...</div><div class=\"data\">LEL 3 : Waiting...</div><div class=\"data\">LEL 4 : Waiting...</div><div class=\"data end\">LEL 5 : Waiting...</div></div>`,\r\n        pixelOffset: new google.maps.Size(-120, 130),\r\n      });\r\n      infowindow5.open(map, marker5);\r\n      const { host, port, endpoint, ...options } = this.connection;\r\n      const connectUrl = `ws://${host}:${port}${endpoint}`;\r\n      try {\r\n        this.client = mqtt.connect(connectUrl, options);\r\n      } catch (error) {\r\n        console.log(\"mqtt.connect error\", error);\r\n      }\r\n      this.client.on(\"connect\", () => {\r\n        console.log(\"Connection succeeded!\");\r\n      });\r\n      this.client.on(\"error\", (error) => {\r\n        console.log(\"Connection failed\", error);\r\n      });\r\n      this.client.on(\"message\", (topic, message) => {\r\n        // if (topic === \"geyzer/data\") {\r\n        if (topic === \"test/responsive\") {\r\n          message = JSON.parse(message);\r\n          // console.log(\"current time: \", Date.now(), message);\r\n        }\r\n        if (topic === \"geyzer/data/petrochemical\") {\r\n          message = JSON.parse(message);\r\n          if (message.JID == 1) {\r\n            infowindow.setContent(\r\n              `<div class=\"container1\"><div class=\"ui header\">Petrochemical Jetty</div><div class=\"data\">O2 : ${message.O2}</div><div class=\"data\">LEL : ${message.LEL}</div><div class=\"data end\">VOC : ${message.VOC}</div></div>`\r\n            );\r\n            // this.checkWarning();\r\n            // const data = {\r\n            //   indexStation: 0,\r\n            //   indexSensor: 3,\r\n            //   data: [message.O2, message.LEL, message.VOC],\r\n            // };\r\n            this.checkWarningRemarks(0);\r\n            // this.getMQTTData(data);\r\n            this.check(0, 0, message.O2, maxO2);\r\n            this.check(0, 1, message.LEL, maxLEL);\r\n            this.check(0, 2, message.VOC, maxVOC);\r\n            // this.insertCurrentArray(data);\r\n            // this.adddata(0);\r\n            // this.countWarning();\r\n            // this.loadedPetrochemicalJetty = true;\r\n            // this.currentDataTimePetrochemicalJetty = new Date();\r\n          }\r\n        }\r\n\r\n        // if (message.JID) {\r\n        // Petrochemical Jetty\r\n\r\n        //Ammonia Whaft Jetty\r\n        if (topic === \"geyzer/data/nh3\") {\r\n          message = JSON.parse(message);\r\n\r\n          if (message.JID == 3) {\r\n            infowindow2.setContent(\r\n              `<div class=\"container2\"><div class=\"ui header\">Ammonia Whaft Jetty</div><div class=\"data\">O2 : ${message.O2}</div><div class=\"data\">LEL : ${message.LEL}</div><div class=\"data end\">NH3 : ${message.NH3}</div></div>`\r\n            );\r\n            // infowindow2.open(map, marker2);\r\n            // const data = {\r\n            //   indexStation: 1,\r\n            //   indexSensor: 3,\r\n            //   data: [message.O2, message.LEL, message.NH3],\r\n            // };\r\n\r\n            this.checkWarningRemarks(1);\r\n            // this.getMQTTData(data);\r\n            this.check(1, 0, message.O2, maxO2);\r\n            this.check(1, 1, message.LEL, maxLEL);\r\n            this.check(1, 2, message.NH3, maxNH3);\r\n            // this.insertCurrentArray(data);\r\n            // this.adddata(1);\r\n            // this.countWarning();\r\n            // this.loadedWhaftJetty = true;\r\n            // this.currentDataTimeWhaftJetty = new Date();\r\n          }\r\n        }\r\n\r\n        // MP10 Jetty\r\n        if (topic === \"geyzer/data/OBB\") {\r\n          message = JSON.parse(message);\r\n          if (message.JID == 2) {\r\n            // const data = {\r\n            //   indexStation: 2,\r\n            //   indexSensor: 3,\r\n            //   data: [message.O2, message.LEL, message.VOC],\r\n            // };\r\n            // if (infowindow3) {\r\n            //   infowindow3.close();\r\n            // }\r\n            // infowindow3 = new google.maps.InfoWindow({\r\n            //   content: `<div class=\"container3\"><div class=\"ui2 header\">OBB Jetty</div><div class=\"data\">O2 : ${message.O2}</div><div class=\"data\">LEL : ${message.LEL}</div><div class=\"data end\">VOC : ${message.VOC}</div></div>`,\r\n            //   pixelOffset: new google.maps.Size(125, 90),\r\n            // });\r\n            infowindow3.setContent(\r\n              `<div class=\"container3\"><div class=\"ui2 header\">OBB Jetty</div><div class=\"data\">O2 : ${message.O2}</div><div class=\"data\">LEL : ${message.LEL}</div><div class=\"data end\">VOC : ${message.VOC}</div></div>`\r\n            );\r\n            // infowindow3.open(map, marker3);\r\n            this.checkWarningRemarks(2);\r\n            // this.getMQTTData(data);\r\n            this.check(2, 0, message.O2, maxO2);\r\n            this.check(2, 1, message.LEL, maxLEL);\r\n            this.check(2, 2, message.VOC, maxVOC);\r\n            // this.insertCurrentArray(data);\r\n            // this.adddata(2);\r\n            // this.countWarning();\r\n            // this.loadedMP10Jetty = true;\r\n            // this.currentDataTimeMP10Jetty = new Date();\r\n          }\r\n        }\r\n\r\n        // DG Yard\r\n        if (topic === \"geyzer/data/dg\") {\r\n          message = JSON.parse(message);\r\n          if (message.JID == 4) {\r\n            const data = {\r\n              indexStation: 3,\r\n              indexSensor: 6,\r\n              data: [\r\n                message.O2,\r\n                message.LEL,\r\n                message.VOC,\r\n                message.NH3,\r\n                message.CL2,\r\n                message.H2S,\r\n              ],\r\n            };\r\n            infowindow4.setContent(\r\n              `<div class=\"container4\"><div class=\"ui4 header\">DG yard</div><div class=\"data\">O2 : ${message.O2}</div><div class=\"data\">LEL : ${message.LEL}</div><div class=\"data\">VOC : ${message.VOC}</div><div class=\"data\">NH3 : ${message.NH3}</div><div class=\"data\">CL2 : ${message.CL2}</div><div class=\"data end\">H2S : ${message.H2S}</div></div>`\r\n            );\r\n            this.checkWarningRemarks(3);\r\n            // this.getMQTTData(data);\r\n            this.check(3, 0, message.O2, maxO2);\r\n            this.check(3, 1, message.LEL, maxLEL);\r\n            this.check(3, 2, message.VOC, maxVOC);\r\n            this.check(3, 3, message.NH3, maxNH3);\r\n            this.check(3, 4, message.CL2, maxCL2);\r\n            this.check(3, 5, message.H2S, maxH2S);\r\n            // this.insertCurrentArray(data);\r\n            // this.adddata(3);\r\n            // this.countWarning();\r\n            // this.loadedDGYard = true;\r\n            // this.currentDataTimeDGYard = new Date();\r\n          }\r\n        }\r\n\r\n        // }\r\n\r\n        // if (message.LNG_ID) {\r\n        // LNG_ID 1\r\n        if (topic === \"geyzer/data/lel/1\") {\r\n          message = JSON.parse(message);\r\n          // console.log(message);\r\n          this.lel1 = message;\r\n          this.lel12 = message;\r\n          this.checkLNG();\r\n          // if (message) {\r\n          // const data = {\r\n          //   indexStation: 4,\r\n          //   indexSensor: 0,\r\n          //   data: message.LEL,\r\n          // };\r\n          // this.lel1 = message;\r\n          infowindow5.setContent(\r\n            `<div class=\"container5\"><div class=\"ui header\">LNG ISO Tank Yard</div><div class=\"data\">LEL 1 : ${this.lel1}</div><div class=\"data\">LEL 2 : ${this.lel2}</div><div class=\"data\">LEL 3 : ${this.lel3}</div><div class=\"data\">LEL 4 : ${this.lel4}</div><div class=\"data end\">LEL 5 : ${this.lel5}</div></div>`\r\n          );\r\n          // this.checkWarningRemarks(4);\r\n          // this.getMQTTDataLNG(data);\r\n          // this.check(4, 0, message.LEL, maxLEL);\r\n          // this.insertCurrentArrayLNG(data);\r\n          // this.adddata(4);\r\n          // this.countWarning();\r\n          // this.loadedLNG = true;\r\n          // this.currentDataTimeLNG = new Date();\r\n          // }\r\n        }\r\n\r\n        // LNG_ID 2\r\n        if (topic === \"geyzer/data/lel/2\") {\r\n          message = JSON.parse(message);\r\n          this.lel2 = message;\r\n          this.lel22 = message;\r\n\r\n          // if (message) {\r\n          const data = {\r\n            indexStation: 4,\r\n            indexSensor: 1,\r\n            data: message.LEL,\r\n          };\r\n\r\n          infowindow5.setContent(\r\n            `<div class=\"container5\"><div class=\"ui header\">LNG ISO Tank Yard</div><div class=\"data\">LEL 1 : ${this.lel1}</div><div class=\"data\">LEL 2 : ${this.lel2}</div><div class=\"data\">LEL 3 : ${this.lel3}</div><div class=\"data\">LEL 4 : ${this.lel4}</div><div class=\"data end\">LEL 5 : ${this.lel5}</div></div>`\r\n          );\r\n          // this.getMQTTDataLNG(data);\r\n          this.checkLNG();\r\n          // this.check(4, 1, message.LEL, maxLEL);\r\n          // this.insertCurrentArrayLNG(data);\r\n          // this.adddata(5);\r\n          // this.countWarning();\r\n          // this.loadedLNG = true;\r\n          // this.currentDataTimeLNG = new Date();\r\n          // }\r\n        }\r\n\r\n        // LNG_ID 3\r\n        if (topic === \"geyzer/data/lel/3\") {\r\n          message = JSON.parse(message);\r\n          this.lel3 = message;\r\n          this.lel32 = message;\r\n          // if (message) {\r\n          const data = {\r\n            indexStation: 4,\r\n            indexSensor: 2,\r\n            data: message.LEL,\r\n          };\r\n\r\n          infowindow5.setContent(\r\n            `<div class=\"container5\"><div class=\"ui header\">LNG ISO Tank Yard</div><div class=\"data\">LEL 1 : ${this.lel1}</div><div class=\"data\">LEL 2 : ${this.lel2}</div><div class=\"data\">LEL 3 : ${this.lel3}</div><div class=\"data\">LEL 4 : ${this.lel4}</div><div class=\"data end\">LEL 5 : ${this.lel5}</div></div>`\r\n          );\r\n          // this.getMQTTDataLNG(data);\r\n          this.checkLNG();\r\n          // this.check(4, 2, message.LEL, maxLEL);\r\n          // this.insertCurrentArrayLNG(data);\r\n          // this.adddata(6);\r\n          // this.countWarning();\r\n          // this.loadedLNG = true;\r\n          // this.currentDataTimeLNG = new Date();\r\n          // }\r\n        }\r\n\r\n        // LNG_ID 4\r\n        if (topic === \"geyzer/data/lel/4\") {\r\n          message = JSON.parse(message);\r\n          // console.log(message);\r\n          // if (message) {\r\n          const data = {\r\n            indexStation: 4,\r\n            indexSensor: 3,\r\n            data: message.LEL,\r\n          };\r\n          this.lel4 = message;\r\n          this.lel42 = message;\r\n          infowindow5.setContent(\r\n            `<div class=\"container5\"><div class=\"ui header\">LNG ISO Tank Yard</div><div class=\"data\">LEL 1 : ${this.lel1}</div><div class=\"data\">LEL 2 : ${this.lel2}</div><div class=\"data\">LEL 3 : ${this.lel3}</div><div class=\"data\">LEL 4 : ${this.lel4}</div><div class=\"data end\">LEL 5 : ${this.lel5}</div></div>`\r\n          );\r\n          // this.getMQTTDataLNG(data);\r\n          this.checkLNG();\r\n          // this.check(4, 3, message.LEL, maxLEL);\r\n          // this.insertCurrentArrayLNG(data);\r\n          // this.adddata(7);\r\n          // this.countWarning();\r\n          // this.loadedLNG = true;\r\n          // this.currentDataTimeLNG = new Date();\r\n          // }\r\n        }\r\n\r\n        // LNG_ID 5\r\n        if (topic === \"geyzer/data/lel/5\") {\r\n          message = JSON.parse(message);\r\n          // if (message) {\r\n          const data = {\r\n            indexStation: 4,\r\n            indexSensor: 4,\r\n            data: message.LEL,\r\n          };\r\n          this.lel5 = message;\r\n          this.lel52 = message;\r\n          infowindow5.setContent(\r\n            `<div class=\"container5\"><div class=\"ui header\">LNG ISO Tank Yard</div><div class=\"data\">LEL 1 : ${this.lel1}</div><div class=\"data\">LEL 2 : ${this.lel2}</div><div class=\"data\">LEL 3 : ${this.lel3}</div><div class=\"data\">LEL 4 : ${this.lel4}</div><div class=\"data end\">LEL 5 : ${this.lel5}</div></div>`\r\n          );\r\n          // this.getMQTTDataLNG(data);\r\n          this.checkLNG();\r\n          // this.check(4, 4, message.LEL, maxLEL);\r\n          // this.insertCurrentArrayLNG(data);\r\n          // this.adddata(8);\r\n          // this.countWarning();\r\n          // this.loadedLNG = true;\r\n          // this.currentDataTimeLNG = new Date();\r\n          // }\r\n        }\r\n\r\n        // this.adddata(4);\r\n        // this.countWarning();\r\n        // this.loadedLNG = true;\r\n        // this.currentDataTimeLNG = new Date();\r\n        // }\r\n        if (topic === \"geyzer/data/weather\") {\r\n          message = JSON.parse(message);\r\n          if (message.ID == 10) {\r\n            // this.getWeather(message);\r\n          }\r\n        }\r\n\r\n        if (topic === \"geyzer/server/stats\") {\r\n          // if (message.server) {\r\n          message = JSON.parse(message);\r\n          // console.log(message);\r\n          // this.getServer(message);\r\n          // this.loadedServer = true;\r\n          // this.currentDataTimeServer = new Date();\r\n          // }\r\n        }\r\n\r\n        // }\r\n      });\r\n    },\r\n    doSubscribe() {\r\n      const { topic, qos } = this.subscription;\r\n      this.client.subscribe(topic, { qos }, (error, res) => {\r\n        if (error) {\r\n          return;\r\n        }\r\n        this.subscribeSuccess = true;\r\n      });\r\n    },\r\n    ...mapMutations({\r\n      checkWarning: \"checkWarning\",\r\n      checkWarningRemarks: \"checkWarningRemarks\",\r\n      checkLNGWarning: \"checkLNGWarning\",\r\n    }),\r\n  },\r\n  async mounted() {\r\n    this.createConnection();\r\n    this.doSubscribe();\r\n  },\r\n};\r\n","import mod from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Maps3.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./Maps3.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Maps3.vue?vue&type=template&id=7cb16e9b&\"\nimport script from \"./Maps3.vue?vue&type=script&lang=js&\"\nexport * from \"./Maps3.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./Maps3.vue?vue&type=style&index=0&lang=css&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  \"4f72d222\"\n  \n)\n\nexport default component.exports"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AAAA;AAAA;AAAA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAPA;AAQA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AApCA;AAszKA;AA2KA;AACA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAIA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAIA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAIA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAYA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AA3lBA;AACA;AAgmBA;AACA;AACA;AACA;AACA;AA9oBA;;ACvBA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}